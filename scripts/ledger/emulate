#!/bin/bash
# Emulate a ledger with a preloaded app

# Get variables from root .env
export $(xargs < .env)

# Set default profile
profile="consensus-networks-dev"

if [ ${PROFILE+x} ]; then
    echo "PROFILE is set to '$PROFILE'"
    profile=$PROFILE
else
    export PROFILE="$profile"
    echo "PROFILE is not set, using default profile '$PROFILE'"
fi

# Get args
while getopts :a: flag
do
    case "${flag}" in
        a) app=${OPTARG};;
    esac
done

echo "LEDGER APP $app"

if [ -z "$app" ]; then
    app="ethereum"
    echo "app is not set, using default app $app"
fi

resource_path=scripts/ledger/resources

if [ ! -f "$resource_path/speculos/apps/$app.elf" ]; then
    echo "App $app not ready yet, running compile script"
    scripts/ledger/compile -a $app
fi

if [[ "$(uname -a)" = *ARM64* ]]; then
    dockerfile=../custom/speculos-aarch64.Dockerfile
else
    dockerfile=./Dockerfile
fi

cd $resource_path/speculos

# Get the secret from AWS
seed=$(aws secretsmanager get-secret-value \
--secret-id consensus-networks-bip39-seed \
--query SecretString \
--output text \
--profile $profile)
export SPECULOS_SEED="$seed"

# Stop current speculos and proxy
echo "ðŸ§¹ Cleaning up speculos environment"
docker ps -q --filter ancestor="speculos:latest" | xargs -r docker stop

# Build and run ledger app
echo "ðŸ“º Emulating $app app on ledger"

docker build . --tag speculos -f $dockerfile
docker run --rm -v "$(pwd)/apps:/speculos/apps" \
-p 1234:1234 -p 5000:5000 -p 40000:40000 -p 41000:41000 \
speculos apps/$app.elf \
--display headless \
--seed "$seed"